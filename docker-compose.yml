services:

  mysql:
    image: mysql
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: lilyiker
      MYSQL_DATABASE: raumania_test_docker
      LANG: C.UTF_8
    ports:
      - '3307:3306'
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 10s
      retries: 5
    volumes:
      - raumania-data:/var/lib/mysql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - net

  redis:
    image: redis:7.2
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - net

  server:
    container_name: server
    build:
      context: ./server
      dockerfile: Dockerfile
    env_file:
      - ./server/.env
    ports:
      - '8080:8080'
    volumes:
      - shared-data:/app/uploads
    networks:
      - net
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy

  client:
    container_name: client
    build:
      context: ./client
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - net
    depends_on:
      - server
        
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.4
    container_name: elasticsearch-chat
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200" ]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - net

  kibana:
    image: docker.elastic.co/kibana/kibana:8.17.4
    container_name: kibana-chat
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - net


  chatbot:
    build:
      context: ./chatbot
      dockerfile: Dockerfile
    container_name: chatbot
    ports:
      - "5000:5000"
    depends_on:
      - ollama
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
    volumes:
      - shared-data:/app/uploads
    networks:
      - net

  ollama:
    build:
      context: ./ollama
      dockerfile: Dockerfile
    container_name: ollama-chat
    restart: unless-stopped
    tty: true
    environment:
      - OLLAMA_HOST=0.0.0.0
    ports:
      - "11434:11434"
    volumes:
      - ollama:/root/.ollama
    networks:
      - net

networks:
  net:
    driver: bridge

volumes:
  raumania-data:
  shared-data:
  esdata:
  ollama: